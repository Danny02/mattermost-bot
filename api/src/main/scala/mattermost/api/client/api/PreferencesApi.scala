/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package mattermost.api.client.api

import mattermost.api.client.core._
import mattermost.api.client.model.{AppError, Preference, StatusOK}

object PreferencesApi {

  /**
   * Lists the current user&#39;s stored preferences in the given category. ##### Permissions Must be logged in as the user being updated or have the &#x60;edit_other_users&#x60; permission. 
   * 
   * Expected answers:
   *   code 200 : Seq[Preference] (A list of all of the current user&#39;s preferences in the given category)
   *   code 400 : AppError (Invalid or missing parameters in URL or request body)
   *   code 401 : AppError (No access token provided)
   *   code 403 : AppError (Do not have appropriate permissions)
   * 
   * @param userId User GUID
   * @param category The category of a group of preferences
   */
  def usersUserIdPreferencesCategoryGet(userId: String, category: String): ApiRequest[Seq[Preference]] =
    ApiRequest[Seq[Preference]](ApiMethods.GET, "http://your-mattermost-url.com/api/v4", "/users/{user_id}/preferences/{category}", "application/json")
      .withPathParam("user_id", userId)
      .withPathParam("category", category)
      .withSuccessResponse[Seq[Preference]](200)
      .withErrorResponse[AppError](400)
      .withErrorResponse[AppError](401)
      .withErrorResponse[AppError](403)
        /**
   * Gets a single preference for the current user with the given category and name. ##### Permissions Must be logged in as the user being updated or have the &#x60;edit_other_users&#x60; permission. 
   * 
   * Expected answers:
   *   code 200 : Preference (A single preference for the current user in the current categorylist of all of the current user&#39;s preferences in the given category. )
   *   code 400 : AppError (Invalid or missing parameters in URL or request body)
   *   code 401 : AppError (No access token provided)
   * 
   * @param userId User GUID
   * @param category The category of a group of preferences
   * @param preferenceName The name of the preference
   */
  def usersUserIdPreferencesCategoryNamePreferenceNameGet(userId: String, category: String, preferenceName: String): ApiRequest[Preference] =
    ApiRequest[Preference](ApiMethods.GET, "http://your-mattermost-url.com/api/v4", "/users/{user_id}/preferences/{category}/name/{preference_name}", "application/json")
      .withPathParam("user_id", userId)
      .withPathParam("category", category)
      .withPathParam("preference_name", preferenceName)
      .withSuccessResponse[Preference](200)
      .withErrorResponse[AppError](400)
      .withErrorResponse[AppError](401)
        /**
   * Delete a list of the user&#39;s preferences. ##### Permissions Must be logged in as the user being updated or have the &#x60;edit_other_users&#x60; permission. 
   * 
   * Expected answers:
   *   code 200 : StatusOK (User preferences saved successful)
   *   code 400 : AppError (Invalid or missing parameters in URL or request body)
   *   code 401 : AppError (No access token provided)
   *   code 403 : AppError (Do not have appropriate permissions)
   * 
   * @param userId User GUID
   * @param body List of preference object
   */
  def usersUserIdPreferencesDeletePost(userId: String, body: Seq[Preference]): ApiRequest[StatusOK] =
    ApiRequest[StatusOK](ApiMethods.POST, "http://your-mattermost-url.com/api/v4", "/users/{user_id}/preferences/delete", "application/json")
      .withBody(body)
      .withPathParam("user_id", userId)
      .withSuccessResponse[StatusOK](200)
      .withErrorResponse[AppError](400)
      .withErrorResponse[AppError](401)
      .withErrorResponse[AppError](403)
        /**
   * Get a list of the user&#39;s preferences. ##### Permissions Must be logged in as the user being updated or have the &#x60;edit_other_users&#x60; permission. 
   * 
   * Expected answers:
   *   code 200 : Seq[Preference] (User preferences retrieval successful)
   *   code 400 : AppError (Invalid or missing parameters in URL or request body)
   *   code 401 : AppError (No access token provided)
   *   code 403 : AppError (Do not have appropriate permissions)
   * 
   * @param userId User GUID
   */
  def usersUserIdPreferencesGet(userId: String): ApiRequest[Seq[Preference]] =
    ApiRequest[Seq[Preference]](ApiMethods.GET, "http://your-mattermost-url.com/api/v4", "/users/{user_id}/preferences", "application/json")
      .withPathParam("user_id", userId)
      .withSuccessResponse[Seq[Preference]](200)
      .withErrorResponse[AppError](400)
      .withErrorResponse[AppError](401)
      .withErrorResponse[AppError](403)
        /**
   * Save a list of the user&#39;s preferences. ##### Permissions Must be logged in as the user being updated or have the &#x60;edit_other_users&#x60; permission. 
   * 
   * Expected answers:
   *   code 200 : StatusOK (User preferences saved successful)
   *   code 400 : AppError (Invalid or missing parameters in URL or request body)
   *   code 401 : AppError (No access token provided)
   *   code 403 : AppError (Do not have appropriate permissions)
   *   code 404 : AppError (Resource not found)
   * 
   * @param userId User GUID
   * @param body List of preference object
   */
  def usersUserIdPreferencesPut(userId: String, body: Seq[Preference]): ApiRequest[StatusOK] =
    ApiRequest[StatusOK](ApiMethods.PUT, "http://your-mattermost-url.com/api/v4", "/users/{user_id}/preferences", "application/json")
      .withBody(body)
      .withPathParam("user_id", userId)
      .withSuccessResponse[StatusOK](200)
      .withErrorResponse[AppError](400)
      .withErrorResponse[AppError](401)
      .withErrorResponse[AppError](403)
      .withErrorResponse[AppError](404)
      

}

